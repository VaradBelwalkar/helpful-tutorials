Cassandra's storage engine provides constant-time writes no matter how big your data set grows. Writes are more problematic in MongoDB, 
partly because of the b-tree based storage engine, but more because of the multi-granularity locking it does.
For analytics, MongoDB provides a custom map/reduce implementation; Cassandra provides native Hadoop support, 
including for Hive (a SQL data warehouse built on Hadoop map/reduce) and Pig (a Hadoop-specific analysis language that many think is a better fit
for map/reduce workloads than SQL). Cassandra also supports use of Spark.
If you're looking at a single server, MongoDB is probably a better fit. For those more concerned about scaling,
Cassandra's no-single-point-of-failure architecture will be easier to set up and more reliable. 
(MongoDB's global write lock tends to become more painful, too.) Cassandra also gives a lot more control over how your replication works, 
including support for multiple data centers.
