https://jwt.io/introduction


JSON Web Tokens (JWTs) are usually passed in the Authorization header of an HTTP request. 
The Authorization header is used to send authentication information to the server, and JWTs are a common way to authenticate requests.

It is also possible to pass a JWT in the body of a request, although this is not as common. 

To do this, you can include the JWT in the request body as a string and set the Content-Type header to "application/jwt". 
However, keep in mind that most servers expect JWTs to be passed in the Authorization header and may not support passing them in the body.



                    Working
                    
                    
                    
When the server creates a new JWT token, it takes the token information (header) and claims (payload) and combines them with a secret key to generate a signature.
This signature is included as the last part of the JWT token (signature) and the token is sent to the client.

When the client sends a request to the server, it includes the JWT token in the request headers. The server then decodes the token, which separates the header,
payload, and signature. The server then uses the same secret key that it used to create the token and the algorithm to generate a new signature 
from the header and payload. If the newly generated signature matches the signature included in the token, it means that the token has not been tampered with 
and the server can proceed with the request.


		// Authorization is one of the headers available in the http request
	
//  Authorization -----------> "Bearer <JWT-Token>"

//This indicates the authorization method, which is JWT one
